local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/GreenDeno/Venyx-UI-Library/main/source.lua"))()
local venyx = library.new("DXLR", 5013109572)

local themes = {
Background = Color3.fromRGB(24, 24, 24),
Glow = Color3.fromRGB(0, 0, 0),
Accent = Color3.fromRGB(10, 10, 10),
LightContrast = Color3.fromRGB(20, 20, 20),
DarkContrast = Color3.fromRGB(14, 14, 14),  
TextColor = Color3.fromRGB(255, 255, 255)
}

local page = venyx:addPage("Main", 5012544693)
local section1 = page:addSection("Mining Clicker Simulator")

local heartbeat 
section1:addToggle("Auto Click", nil, function(value)
if value == true then  
           heartbeat = game:GetService("RunService").Heartbeat:Connect(function()
game:GetService("ReplicatedStorage").Remotes.Click:InvokeServer()
        end)
else
    heartbeat:Disconnect() 
end
end)


local heartbeat2
section1:addToggle("Auto Rebirth", nil, function(value)
if value == true then  
           heartbeat2 = game:GetService("RunService").Heartbeat:Connect(function()
            game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer()
        end)
else
    heartbeat2:Disconnect() 
end
end)

local pickaxeModule = require(game:GetService("ReplicatedStorage").Modules.pickaxesModule)

local function getCurrentPickaxe()
    return game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("Tool").Name
end

local function getNextPickaxe()
    local current = pickaxeModule.picks[getCurrentPickaxe()]

    local next

    for i, v in pairs(pickaxeModule.picks) do
        if v.Index == current.Index + 1 then
            next = i
        end
    end

    return next
end



local heartbeat3
section1:addToggle("Auto Buy Pickaxe", nil, function(value)
if value == true then  
           heartbeat3 = game:GetService("RunService").Heartbeat:Connect(function()
                        local nextPick = getNextPickaxe()
                        if nextPick then
                            game:GetService("ReplicatedStorage").Remotes.BuyPickaxe:InvokeServer(nextPick)
                        end
        
        end)
else
    heartbeat3:Disconnect() 
end
end)



section1:addDropdown("Instant break zone wall", {"wall 1", "wall 2", "wall 3", "wall 4", "wall 5", "wall 6","wall 7", "wall 8"}, function(text)
if text == "wall 1" then
game:GetService("ReplicatedStorage").Remotes.BuyZone:FireServer("1")
elseif text == "wall 2" then
    game:GetService("ReplicatedStorage").Remotes.BuyZone:FireServer("2")
    elseif text == "wall 3" then
        game:GetService("ReplicatedStorage").Remotes.BuyZone:FireServer("3")
    elseif text == "wall 4" then
        game:GetService("ReplicatedStorage").Remotes.BuyZone:FireServer("4")
    elseif text == "wall 5" then
        game:GetService("ReplicatedStorage").Remotes.BuyZone:FireServer("5")
    elseif text == "wall 6" then
        game:GetService("ReplicatedStorage").Remotes.BuyZone:FireServer("6")
    elseif text == "wall 7" then
        game:GetService("ReplicatedStorage").Remotes.BuyZone:FireServer("7")
    elseif text == "wall 8" then
        game:GetService("ReplicatedStorage").Remotes.BuyZone:FireServer("8")
    end
end)
    


section1:addButton("Rebirth", function()
    game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer()
end)

section1:addSlider("WalkSpeed", 0, 0, 1000, function(value)
	game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = value
end)
section1:addSlider("JumpPower", 0, 0, 1000, function(value)
	game.Players.LocalPlayer.Character.Humanoid.JumpPower = value
end)

